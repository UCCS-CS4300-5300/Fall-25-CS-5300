name: Continuous Deployment

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  docker-release:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    permissions:
      contents: write
      packages: write

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Read and Increment Version
      id: version
      run: |
        # Read current version
        CURRENT_VERSION=$(cat version.txt)
        echo "Current version: $CURRENT_VERSION"

        # Split version into parts
        IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
        major="${version_parts[0]}"
        minor="${version_parts[1]}"
        patch="${version_parts[2]}"

        # Increment patch version
        patch=$((patch + 1))
        NEW_VERSION="${major}.${minor}.${patch}"

        echo "New version: $NEW_VERSION"
        echo "$NEW_VERSION" > version.txt
        echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Commit Version Update
      run: |
        git add version.txt
        git commit -m "chore: bump version to ${{ steps.version.outputs.version }} [skip ci]"
        git push

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./active_interview_backend
        file: ./active_interview_backend/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Docker Release Summary
      run: |
        {
          echo '# Docker Release'
          echo ''
          echo '## Status'
          echo '✅ Docker image built and pushed successfully'
          echo ''
          echo '## Details'
          echo "- Version: ${{ steps.version.outputs.version }}"
          echo "- Image: ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}"
          echo "- Latest: ghcr.io/${{ github.repository }}:latest"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Triggered by: ${{ github.actor }}"
          echo "- Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        } >> $GITHUB_STEP_SUMMARY

  deploy:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: docker-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Deploy Docker Image to Railway
      id: deploy
      continue-on-error: true
      run: |
        railway link ${{ secrets.RAILWAY_SERVICE_ID }}
        railway up --service=${{ secrets.RAILWAY_SERVICE_ID }} --detach
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    - name: Deployment Summary
      if: always()
      run: |
        {
          echo '# Railway Deployment'
          echo ''
          echo '## Status'
          if [ "${{ steps.deploy.outcome }}" == "success" ]; then
            echo '✅ Deployment successful'
          else
            echo '❌ Deployment failed'
          fi
          echo ''
          echo '## Details'
          echo "- Docker Image: ghcr.io/${{ github.repository }}:${{ needs.docker-release.outputs.version }}"
          echo "- Version: ${{ needs.docker-release.outputs.version }}"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Triggered by: ${{ github.actor }}"
          echo "- Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        } >> $GITHUB_STEP_SUMMARY
